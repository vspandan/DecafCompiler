
//For loop
class p{ int a; int b; int main(){ for i=0, 3 { a=i;} callout("printf","%d",a);return a;}}
class p{ int a; int b; int main(){ for i=0, 3 { a=10;} callout("printf","%d",a); return a;}}
class p{ int a; int main(){int a;for i=0,8 {a=10+i;} callout("printf","%d",a);return a;}}
class p{ int a; int main(){int a;for i=0,8 {a+=i;} callout("printf","%d",a);return a;}}
class p{ int a; int main(){ int a; for i=0,3 {a=i;} callout("printf","%d",a);return a;}}


//Callout
class p{ int a; int b; int main(){ callout("printf","spandan"); return 0;}}
class p{ int a; int b; int main(){ callout("printf","spandan",a); return 0;}}
class p{ int a; int b; int main(){ callout("printf","spandan %d",a); return 0;}}
class p{ int a; int b; int main(){ callout("printf","spandan %d",10); return 0;}}
class p{ int a; int b; void ab(){ for i=0, 3 { a=10; if(a!=10){ break;} else { a=200;}}} int main(){callout("printf","%d\n",ab());return 0;}}//should fail printing void value
class p{ boolean ab(boolean a,boolean b){return b;}  int main() { callout("printf","%d", ab(true,true)); return 0; }}
class p{ boolean ab(boolean a,boolean b){return b;}  int main() { boolean pl;pl=ab(true,true);callout("printf","%d", pl); return 0; }}

//callout without arg
class p{ int main(){ callout("printf"); return 0;}}
class p{ int main(){ callout("sys_setup"); return 0;}}


//method calls
class p{ int ab(int a,int b){return b;} int s(){int arg; arg=90; ab(arg,arg); return 0;} int main() { s(); callout("printf","%d", ab(3,4)); return 0; }}
class p{ int ad(int a, int b){ ad(6,8); return a;} int main() { ad(3,4); return 0;}}	//this should fail
class p{ int ab(int a,int b){return b;} int s(){int arg; arg=90; return ab(arg,arg);} int main() { s(); callout("printf","%d", ab(3,4)); ab(3,4); return 0; }}
class p{ int ab(int a){return 0;} int s(){int arg; arg=90; ab(arg); return 0;} int main(){s(); ab(3); return 0; } }//not a recursion

class p{ int ab(int a,int b){return true;}  int main() { callout("printf","%d", ab(3,4)); return 0; }}//should fail
class p{ boolean ab(int a,int b){return b;}  int main() { callout("printf","%d", ab(3,4)); return 0; }}//should fail
class p{ boolean ab(boolean a,boolean b){return b;}  int main() { int pl;pl=ab(true,true);callout("printf","%d", pl); return 0; }}//should fail
class p{ boolean ab(boolean a,boolean b){return b;}  int main() { int pl;pl=8+ab(true,true);callout("printf","%d", pl); return 0; }}//should fail

//using return values of method statements;

class p{ void ab(int a){a=39;} int s(){int arg; arg=ab(arg); return 0;} int main(){s();return 0; } }//should through an error
class p{ void ab(int a){a=39;} int main(){return ab(8) ; } }//should fail
class p{ int ab(int a){a=39; return a;} int main(){int t; t=ab(8) ; return t; } }



//initializations
class p{ }
class p { int a,b;}
class p{ int a[9];}
class p{ int a,b,c,d; boolean s; }
class p{ boolean a[9];}
class p{ boolean a[9]; int a[9];}
class p{ boolean a[9],b; int a[9],b;}
class p{ int a[0];}//should fail

//function declarations - with and without main - scope
class p{ int ab(){return 0;} int s(){return 0;}} //no main
class p{ int ab(){return 0;} int s(){ab(); return 0;}} //no main
class p{ int a; int ab(){ a=b+v;}}//should fail as there is no variable decl
class p{ int a, b; int ab(){ a=10;}}//should fail no return statement
class p{ int main(){ int a; a=-9; return a;}}
class prg { void ab(){ int a;}}
class p{ int ab(){ int a; int b; b=32; a=b+10; return a;}}
class p{ int ab(){ int a; a=32; a=a+10; return a;}}
class p{ int a; int b; int main(){ int a; int b; b=32; a=b+10; a=-(a);return a;}}
class p{ int main(){int a; a=1000; a-=10; return a;}}
class p{ int main(){int a; a=1000; a+=10; return a;}}
class p{ int a; int b; int main(){ int a; int a; int b; b=32; a=b+10; a=-(a);return a;}}//fails multiple local variable declaration
class p { int ab(int b){ return b;} int main() { ab(); return 0; }}
class p { int ab(int b){ return a;} int main() { ab(); return 0; }}//should return error
class p{ int ad(int a, int b){ ad(6,8); return a;} int main(){ ad(3,8);return 0;}}//fails - recursion
class p{ int ab(int a,int b){return b;} int s(){int arg; arg=90; ab(arg,arg); return 0;}}
class p{ int ab(int a,int b){return b;} int s(){int arg; arg=90;  return ab(arg,arg);}}
class p{ int ab(int a){return 0;} int s(){int arg; arg=90; ab(arg); return 0;}}


//if-else
class p { int a; int ab(){ if(a==b) {a=b; } return b;}}//no variable declration for b
class p{int main(){ int a,b; a=9;b=8; if(a>b){ callout("printf","%d",a);} return 0;}}
class p{int main(){ int a,b; a=9;b=8; if(a>b){a=10;} else{ a=b;} return 0;}}
class p{int main(){ boolean a,b; a=true;b=false; if(a||b){} else{ a=b;} return 0;}}
class p{int main(){ boolean a,b; a=true;b=false; if(a||b){} else{ a=b;} return a;}}// should fail






//arithmetic-op
class p{ int a; int b; int ab(){ int a; int b; b=32; a=b+10; return a;} int main(){ callout("printf","%d",ab()); return 0;}}
class p{ int a; int b; int ab(){ int a; int b; b=32; a=b-10; return a;} int main(){ callout("printf","%d",ab()); return 0;}}
class p{ int a; int b; int ab(){ int a; int b; b=32; a=b/10; return a;} int main(){ callout("printf","%d",ab()); return 0;}}
class p{ int a; int b; int ab(){ int a; int b; b=32; a=b*10; return a;} int main(){ callout("printf","%d",ab()); return 0;}}
class p{ int a; int b; int ab(){ int a; int b; b=32; a=b%10; return a;} int main(){ callout("printf","%d",ab()); return 0;}}

//arithmeticop for expr
class p{ int a; int b; int ab(){ int a; int b; b=32; a=(b*10); return a;}  int main(){ callout("printf","%d",ab()); return 0;}}

//unary
class p{ int a; int b; int ab(){ int a; int b; b=32; a=-(b*10); return a;} int main(){ callout("printf","%d",ab()); return 0;}}
class p{ int a; int b; int ab(){ int a; int b; b=32; a=b+10; a=-(a);return a;} int main(){ callout("printf","%d",ab()); return 0;}}
class p{ int a; int b; int ab(){ int a; int b; b=32; a=b+10; a=!a;return a;} int main(){ callout("printf","%d",ab()); return 0;}}
class p{ int a; int b; int ab(){ int a; int b; b=32; a=b+10; a=-a;return a;} int main(){ callout("printf","%d",ab()); return 0;}}
class p{ int a; int b; int ab(){ int a; int b; b=32; a=b+10; a=-(a);return a;} int main(){ callout("printf","%d",ab()); return 0;}}

//local and global variable demo
class p{ int a; int b; int ab(){ int a; int b; b=32; a=b+10; return a;} int main(){ return 0;}} //check llvm-ir for conf
class p{ int a; int b; int ab(){ int b; b=32; a=b+10; return a;}int main(){ return 0;}} //check llvm-ir for conf

//conditional
class p{int main(){ boolean a,b; a=true;b=false; if(1||b){} else{ a=b;} return 0;}}//fails; printerror
class p{int main(){ boolean a,b; a=true;b=false; if(true||b){} else{ a=b;} return 0;}}

//break;; continue;; failure cases
class p{ int a; int b; int ab(){ for i=0, 3 { a=10; break;} return a;} int main(){callout("printf","%d\n",ab());return 0;}}
class p{ int a; int b; int ab(){ for i=0, 3 { a=10; continue;} return a;} int main(){callout("printf","%d\n",ab());return 0;}}
class p{ int a; int b; int ab(){ for i=0, 3 { a=20; if(a>10){ break;} else {continue;}} return a;} int main(){callout("printf","%d\n",ab());return 0;}}
class p{ int a; int b; int ab(){ for i=0, 3 { a=10; break;a=20;} return a;} int main(){callout("printf","%d\n",ab());return 0;}}
class p{ int a; int b; int ab(){ for i=0, 3 { a=10; if(a==10){ a=1000; break;} } return a;} int main(){callout("printf","%d\n",ab());return 0;}}
class p{ int a; int b; int ab(){ for i=0, 3 { a=10; if(a!=10){ break;} else { a=200;}} return a;} int main(){callout("printf","%d\n",ab());return 0;}}
class p{ int a; int b; int ab(){ a=10; break;a=20; return a;} int main(){return 0;}}//break failure case
class p{ int a; int b; int ab(){ a=10; continue;a=20; return a;} int main(){return 0;}}//continue failure case

